App.ProductsRoute=Ember.Route.extend({model:function(){var a="/recipes/",b=this.store;return Ember.$.getJSON(a).then(function(a){for(var d=0,e=a.length;e>d;d++)b.createRecord("product",{title:a[d].title,price:a[d].price,model:a[d].model,description:a[d].description,type:a[d].type,image:a[d].image});return a})}}),App.ProductsIndexView=Ember.View.extend({didInsertElement:function(){var a=this;$(window).bind("scroll",function(){a.didScroll()})},didScroll:function(){this.isScrolledToBottom()&&this.get("controller").send("loadMoreItems")},isScrolledToBottom:function(){var a=$(document).height()-$(window).height(),b=$(document).scrollTop();return b===a},willDestroyElement:function(){$(window).unbind("scroll")}}),App.ProductsIndexRoute=Ember.Route.extend({tempStorage:function(){return this.modelFor("products")},showItems:3,mod:[],prodController:null,appController:null,queryField:null,beforeModel:function(){prodController=this.controllerFor("products"),prodController.set("previousTransition","today"),appController=this.controllerFor("application");var b=appController.get("queryField");this.set("queryField",b)},model:function(){if(!this.get("queryField")){for(var b=0;3>b;++b)this.mod[b]=this.tempStorage()[b];return this.incrementProperty("this.showItems",3),this.mod}var c=new RegExp(this.get("queryField"),"i");return this.modelFor("products").filter(function(a){return c.exec(a.title)})},actions:{queryParamsDidChange:function(){this.refresh()},willTransition:function(){prodController.set("previousTransition","tomorrow")},ref:function(){this.refresh()},demo:function(){console.log("demo")},loadItems:function(){if(!this.queryField){for(var a=this.modelFor("products_index"),b=this.modelFor("products"),c=b.length,d=this.showItems-3;d<this.showItems;d++)c>d&&a.addObject(b[d]);this.incrementProperty("showItems",3)}}}}),App.ProductsBoardsRoute=Ember.Route.extend({model:function(){return this.modelFor("products").filterProperty("type","boards")}}),App.ProductsSensorsRoute=Ember.Route.extend({model:function(){return this.modelFor("products").filterProperty("type","sensors")}}),App.ProductsRoboticsRoute=Ember.Route.extend({model:function(){return this.modelFor("products").filterProperty("type","robotics")}}),App.ProductsController=Ember.ArrayController.extend({needs:["products_index"],previousTransition:"now",sortProperties:["title"],count:function(){return this.get("length")}.property("length"),actions:{closeModal:function(){},addItem:function(a){var b=!1;if(null!=window.localStorage["ctr-store"]){var d=JSON.parse(localStorage["ctr-store"]),e=d.cart.records;for(var f in e)if(e.hasOwnProperty(f)&&e[f].name==a.title){d.cart.records[f].quantity++,this.store.update("cart",d.cart.records[f]),b=!0,localStorage["ctr-store"]=JSON.stringify(d);break}}if(!b){var h=this.store.createRecord("cart",{name:a.title,amount:a.price,quantity:1});h.save()}}}}),App.ProductsIndexController=Ember.ArrayController.extend({needs:"application",sortProperties:["title"],modelRefresher:function(){this.get("target.router").refresh()},loadMoreItems:function(){this.send("loadItems")},actions:{addItem:function(a){var b=this.controllerFor("products");b.send("addItem",a)}}}),App.ProductsBoardsController=Ember.ArrayController.extend({actions:{addItem:function(a){var b=this.controllerFor("products");b.send("addItem",a)}}}),App.ProductsSensorsController=Ember.ArrayController.extend({actions:{addItem:function(a){var b=this.controllerFor("products");b.send("addItem",a)}}}),App.ProductsRoboticsController=Ember.ArrayController.extend({actions:{addItem:function(a){var b=this.controllerFor("products");b.send("addItem",a)}}}),App.ProductDetailComponent=Ember.Component.extend({classNameBindings:["isOnSale"],isOnSale:function(){return this.get("product.isOnSale")}.property(),actions:{addMe:function(a){this.sendAction("addMe",a)},openModal:function(a,b){this.get("parentView").send("showModal",a,b)},closeModal:function(){this.get("parentView").send("removeModal",action)}}});