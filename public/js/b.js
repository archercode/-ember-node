App.ProductsRoute=Ember.Route.extend({model:function(){var a=this.store;return Ember.$.getJSON("/recipes/").then(function(b){for(var c=0,d=b.length;d>c;c++)a.createRecord("product",{title:b[c].title,price:b[c].price,model:b[c].model,description:b[c].description,type:b[c].type,image:b[c].image});return b})}});
App.ProductsIndexView=Ember.View.extend({didInsertElement:function(){var a=this;$(window).bind("scroll",function(){a.didScroll()})},didScroll:function(){this.isScrolledToBottom()&&this.get("controller").send("loadMoreItems")},isScrolledToBottom:function(){var a=$(document).height()-$(window).height();return $(document).scrollTop()===a},willDestroyElement:function(){$(window).unbind("scroll")}});
App.ProductsIndexRoute=Ember.Route.extend({tempStorage:function(){return this.modelFor("products")},showItems:3,mod:[],prodController:null,appController:null,queryField:null,beforeModel:function(){prodController=this.controllerFor("products");prodController.set("previousTransition","today");appController=this.controllerFor("application");var a=appController.get("queryField");this.set("queryField",a)},model:function(){if(!this.get("queryField")){for(var a=0;3>a;++a)this.mod[a]=this.tempStorage()[a];
return this.incrementProperty("this.showItems",3),this.mod}var b=new RegExp(this.get("queryField"),"i");return this.modelFor("products").filter(function(a){return b.exec(a.title)})},actions:{queryParamsDidChange:function(){this.refresh()},willTransition:function(){prodController.set("previousTransition","tomorrow")},ref:function(){this.refresh()},demo:function(){console.log("demo")},loadItems:function(){if(!this.queryField){for(var a=this.modelFor("products_index"),b=this.modelFor("products"),c=b.length,
d=this.showItems-3;d<this.showItems;d++)c>d&&a.addObject(b[d]);this.incrementProperty("showItems",3)}}}});App.ProductsBoardsRoute=Ember.Route.extend({model:function(){return this.modelFor("products").filterProperty("type","boards")}});App.ProductsSensorsRoute=Ember.Route.extend({model:function(){return this.modelFor("products").filterProperty("type","sensors")}});App.ProductsRoboticsRoute=Ember.Route.extend({model:function(){return this.modelFor("products").filterProperty("type","robotics")}});
App.ProductsController=Ember.ArrayController.extend({needs:["products_index"],previousTransition:"now",sortProperties:["title"],count:function(){return this.get("length")}.property("length"),actions:{closeModal:function(){},addItem:function(a){var b=!1;if(null!=window.localStorage["ctr-store"]){var c=JSON.parse(localStorage["ctr-store"]),d=c.cart.records,e;for(e in d)if(d.hasOwnProperty(e)&&d[e].name==a.title){c.cart.records[e].quantity++;this.store.update("cart",c.cart.records[e]);b=!0;localStorage["ctr-store"]=
JSON.stringify(c);break}}b||this.store.createRecord("cart",{name:a.title,amount:a.price,quantity:1}).save()}}});App.ProductsIndexController=Ember.ArrayController.extend({needs:"application",sortProperties:["title"],modelRefresher:function(){this.get("target.router").refresh()},loadMoreItems:function(){this.send("loadItems")},actions:{addItem:function(a){this.controllerFor("products").send("addItem",a)}}});
App.ProductsBoardsController=Ember.ArrayController.extend({actions:{addItem:function(a){this.controllerFor("products").send("addItem",a)}}});App.ProductsSensorsController=Ember.ArrayController.extend({actions:{addItem:function(a){this.controllerFor("products").send("addItem",a)}}});App.ProductsRoboticsController=Ember.ArrayController.extend({actions:{addItem:function(a){this.controllerFor("products").send("addItem",a)}}});
App.ProductDetailComponent=Ember.Component.extend({classNameBindings:["isOnSale"],isOnSale:function(){return this.get("product.isOnSale")}.property(),actions:{addMe:function(a){this.sendAction("addMe",a)},openModal:function(a,b){this.get("parentView").send("showModal",a,b)},closeModal:function(){this.get("parentView").send("removeModal",action)}}});